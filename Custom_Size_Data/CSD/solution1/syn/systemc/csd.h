// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _csd_HH_
#define _csd_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct csd : public sc_module {
    // Port declarations 8
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<17> > inA_V;
    sc_in< sc_lv<17> > inB_V;
    sc_in< sc_lv<8> > op;
    sc_out< sc_lv<17> > ap_return;
    // Port declarations for the virtual clock. 
    sc_in_clk ap_virtual_clock;


    // Module declarations
    csd(sc_module_name name);
    SC_HAS_PROCESS(csd);

    ~csd();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    sc_signal< sc_lv<1> > icmp_ln5_fu_38_p2;
    sc_signal< sc_lv<17> > add_ln209_fu_50_p2;
    sc_signal< sc_lv<17> > sub_ln214_fu_44_p2;
    static const sc_logic ap_const_logic_1;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_logic ap_const_logic_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_add_ln209_fu_50_p2();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_icmp_ln5_fu_38_p2();
    void thread_sub_ln214_fu_44_p2();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
