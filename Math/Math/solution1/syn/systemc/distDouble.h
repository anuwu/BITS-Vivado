// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _distDouble_HH_
#define _distDouble_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "pow_generic_double_s.h"
#include "distDouble_dadddsyd2.h"
#include "distDouble_dsub_6zec.h"
#include "distDouble_dsqrt_Aem.h"

namespace ap_rtl {

struct distDouble : public sc_module {
    // Port declarations 11
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<64> > x1;
    sc_in< sc_lv<64> > y1;
    sc_in< sc_lv<64> > x2;
    sc_in< sc_lv<64> > y2;
    sc_out< sc_lv<64> > ap_return;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_lv<64> > ap_var_for_const1;


    // Module declarations
    distDouble(sc_module_name name);
    SC_HAS_PROCESS(distDouble);

    ~distDouble();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    pow_generic_double_s* grp_pow_generic_double_s_fu_70;
    pow_generic_double_s* grp_pow_generic_double_s_fu_99;
    distDouble_dadddsyd2<1,5,64,64,64>* distDouble_dadddsyd2_U36;
    distDouble_dsub_6zec<1,5,64,64,64>* distDouble_dsub_6zec_U37;
    distDouble_dsqrt_Aem<1,21,64,64,64>* distDouble_dsqrt_Aem_U38;
    sc_signal< sc_lv<69> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<64> > grp_fu_128_p2;
    sc_signal< sc_lv<64> > reg_145;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_logic > ap_CS_fsm_state48;
    sc_signal< sc_lv<64> > grp_fu_134_p2;
    sc_signal< sc_lv<64> > x_assign_1_reg_171;
    sc_signal< sc_lv<64> > grp_pow_generic_double_s_fu_70_ap_return;
    sc_signal< sc_lv<64> > tmp_i_reg_176;
    sc_signal< sc_logic > ap_CS_fsm_state43;
    sc_signal< sc_lv<64> > grp_pow_generic_double_s_fu_99_ap_return;
    sc_signal< sc_lv<64> > tmp_i1_reg_181;
    sc_signal< sc_logic > grp_pow_generic_double_s_fu_70_ap_start;
    sc_signal< sc_logic > grp_pow_generic_double_s_fu_70_ap_done;
    sc_signal< sc_logic > grp_pow_generic_double_s_fu_70_ap_idle;
    sc_signal< sc_logic > grp_pow_generic_double_s_fu_70_ap_ready;
    sc_signal< sc_logic > grp_pow_generic_double_s_fu_99_ap_start;
    sc_signal< sc_logic > grp_pow_generic_double_s_fu_99_ap_done;
    sc_signal< sc_logic > grp_pow_generic_double_s_fu_99_ap_idle;
    sc_signal< sc_logic > grp_pow_generic_double_s_fu_99_ap_ready;
    sc_signal< sc_logic > grp_pow_generic_double_s_fu_70_ap_start_reg;
    sc_signal< sc_lv<69> > ap_NS_fsm;
    sc_signal< sc_logic > ap_NS_fsm_state6;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_logic > grp_pow_generic_double_s_fu_99_ap_start_reg;
    sc_signal< sc_lv<64> > grp_fu_128_p0;
    sc_signal< sc_lv<64> > grp_fu_128_p1;
    sc_signal< sc_logic > ap_CS_fsm_state44;
    sc_signal< sc_logic > ap_CS_fsm_state49;
    sc_signal< sc_lv<2> > grp_fu_128_opcode;
    sc_signal< sc_lv<64> > grp_fu_140_p2;
    sc_signal< sc_logic > ap_CS_fsm_state69;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<69> ap_ST_fsm_state1;
    static const sc_lv<69> ap_ST_fsm_state2;
    static const sc_lv<69> ap_ST_fsm_state3;
    static const sc_lv<69> ap_ST_fsm_state4;
    static const sc_lv<69> ap_ST_fsm_state5;
    static const sc_lv<69> ap_ST_fsm_state6;
    static const sc_lv<69> ap_ST_fsm_state7;
    static const sc_lv<69> ap_ST_fsm_state8;
    static const sc_lv<69> ap_ST_fsm_state9;
    static const sc_lv<69> ap_ST_fsm_state10;
    static const sc_lv<69> ap_ST_fsm_state11;
    static const sc_lv<69> ap_ST_fsm_state12;
    static const sc_lv<69> ap_ST_fsm_state13;
    static const sc_lv<69> ap_ST_fsm_state14;
    static const sc_lv<69> ap_ST_fsm_state15;
    static const sc_lv<69> ap_ST_fsm_state16;
    static const sc_lv<69> ap_ST_fsm_state17;
    static const sc_lv<69> ap_ST_fsm_state18;
    static const sc_lv<69> ap_ST_fsm_state19;
    static const sc_lv<69> ap_ST_fsm_state20;
    static const sc_lv<69> ap_ST_fsm_state21;
    static const sc_lv<69> ap_ST_fsm_state22;
    static const sc_lv<69> ap_ST_fsm_state23;
    static const sc_lv<69> ap_ST_fsm_state24;
    static const sc_lv<69> ap_ST_fsm_state25;
    static const sc_lv<69> ap_ST_fsm_state26;
    static const sc_lv<69> ap_ST_fsm_state27;
    static const sc_lv<69> ap_ST_fsm_state28;
    static const sc_lv<69> ap_ST_fsm_state29;
    static const sc_lv<69> ap_ST_fsm_state30;
    static const sc_lv<69> ap_ST_fsm_state31;
    static const sc_lv<69> ap_ST_fsm_state32;
    static const sc_lv<69> ap_ST_fsm_state33;
    static const sc_lv<69> ap_ST_fsm_state34;
    static const sc_lv<69> ap_ST_fsm_state35;
    static const sc_lv<69> ap_ST_fsm_state36;
    static const sc_lv<69> ap_ST_fsm_state37;
    static const sc_lv<69> ap_ST_fsm_state38;
    static const sc_lv<69> ap_ST_fsm_state39;
    static const sc_lv<69> ap_ST_fsm_state40;
    static const sc_lv<69> ap_ST_fsm_state41;
    static const sc_lv<69> ap_ST_fsm_state42;
    static const sc_lv<69> ap_ST_fsm_state43;
    static const sc_lv<69> ap_ST_fsm_state44;
    static const sc_lv<69> ap_ST_fsm_state45;
    static const sc_lv<69> ap_ST_fsm_state46;
    static const sc_lv<69> ap_ST_fsm_state47;
    static const sc_lv<69> ap_ST_fsm_state48;
    static const sc_lv<69> ap_ST_fsm_state49;
    static const sc_lv<69> ap_ST_fsm_state50;
    static const sc_lv<69> ap_ST_fsm_state51;
    static const sc_lv<69> ap_ST_fsm_state52;
    static const sc_lv<69> ap_ST_fsm_state53;
    static const sc_lv<69> ap_ST_fsm_state54;
    static const sc_lv<69> ap_ST_fsm_state55;
    static const sc_lv<69> ap_ST_fsm_state56;
    static const sc_lv<69> ap_ST_fsm_state57;
    static const sc_lv<69> ap_ST_fsm_state58;
    static const sc_lv<69> ap_ST_fsm_state59;
    static const sc_lv<69> ap_ST_fsm_state60;
    static const sc_lv<69> ap_ST_fsm_state61;
    static const sc_lv<69> ap_ST_fsm_state62;
    static const sc_lv<69> ap_ST_fsm_state63;
    static const sc_lv<69> ap_ST_fsm_state64;
    static const sc_lv<69> ap_ST_fsm_state65;
    static const sc_lv<69> ap_ST_fsm_state66;
    static const sc_lv<69> ap_ST_fsm_state67;
    static const sc_lv<69> ap_ST_fsm_state68;
    static const sc_lv<69> ap_ST_fsm_state69;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_2F;
    static const sc_lv<32> ap_const_lv32_2A;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_2B;
    static const sc_lv<32> ap_const_lv32_30;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<32> ap_const_lv32_44;
    static const sc_lv<64> ap_const_lv64_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state43();
    void thread_ap_CS_fsm_state44();
    void thread_ap_CS_fsm_state48();
    void thread_ap_CS_fsm_state49();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state69();
    void thread_ap_NS_fsm_state6();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_grp_fu_128_opcode();
    void thread_grp_fu_128_p0();
    void thread_grp_fu_128_p1();
    void thread_grp_pow_generic_double_s_fu_70_ap_start();
    void thread_grp_pow_generic_double_s_fu_99_ap_start();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
