// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "FFT.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic FFT::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic FFT::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<17> FFT::ap_ST_fsm_state1 = "1";
const sc_lv<17> FFT::ap_ST_fsm_state2 = "10";
const sc_lv<17> FFT::ap_ST_fsm_state3 = "100";
const sc_lv<17> FFT::ap_ST_fsm_state4 = "1000";
const sc_lv<17> FFT::ap_ST_fsm_state5 = "10000";
const sc_lv<17> FFT::ap_ST_fsm_state6 = "100000";
const sc_lv<17> FFT::ap_ST_fsm_state7 = "1000000";
const sc_lv<17> FFT::ap_ST_fsm_state8 = "10000000";
const sc_lv<17> FFT::ap_ST_fsm_state9 = "100000000";
const sc_lv<17> FFT::ap_ST_fsm_state10 = "1000000000";
const sc_lv<17> FFT::ap_ST_fsm_state11 = "10000000000";
const sc_lv<17> FFT::ap_ST_fsm_state12 = "100000000000";
const sc_lv<17> FFT::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<17> FFT::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<17> FFT::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<17> FFT::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<17> FFT::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<32> FFT::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> FFT::ap_const_lv32_1 = "1";
const sc_lv<1> FFT::ap_const_lv1_0 = "0";
const sc_lv<32> FFT::ap_const_lv32_F = "1111";
const sc_lv<32> FFT::ap_const_lv32_10 = "10000";
const sc_lv<32> FFT::ap_const_lv32_2 = "10";
const sc_lv<32> FFT::ap_const_lv32_3 = "11";
const sc_lv<32> FFT::ap_const_lv32_E = "1110";
const sc_lv<6> FFT::ap_const_lv6_0 = "000000";
const sc_lv<32> FFT::ap_const_lv32_4 = "100";
const sc_lv<1> FFT::ap_const_lv1_1 = "1";
const sc_lv<32> FFT::ap_const_lv32_D = "1101";
const sc_lv<32> FFT::ap_const_lv32_6 = "110";
const sc_lv<32> FFT::ap_const_lv32_8 = "1000";
const sc_lv<32> FFT::ap_const_lv32_A = "1010";
const sc_lv<32> FFT::ap_const_lv32_C = "1100";
const sc_lv<6> FFT::ap_const_lv6_1 = "1";
const sc_lv<32> FFT::ap_const_lv32_5 = "101";
const sc_lv<6> FFT::ap_const_lv6_2 = "10";
const sc_lv<32> FFT::ap_const_lv32_7 = "111";
const sc_lv<6> FFT::ap_const_lv6_4 = "100";
const sc_lv<32> FFT::ap_const_lv32_9 = "1001";
const sc_lv<6> FFT::ap_const_lv6_8 = "1000";
const sc_lv<32> FFT::ap_const_lv32_B = "1011";
const sc_lv<6> FFT::ap_const_lv6_10 = "10000";
const sc_lv<4> FFT::ap_const_lv4_4 = "100";
const sc_lv<4> FFT::ap_const_lv4_3 = "11";
const sc_lv<4> FFT::ap_const_lv4_2 = "10";
const sc_lv<4> FFT::ap_const_lv4_1 = "1";
const sc_lv<4> FFT::ap_const_lv4_0 = "0000";
const sc_lv<4> FFT::ap_const_lv4_5 = "101";
const sc_lv<6> FFT::ap_const_lv6_20 = "100000";
const sc_lv<32> FFT::ap_const_lv32_1F = "11111";
const bool FFT::ap_const_boolean_1 = true;

FFT::FFT(sc_module_name name) : sc_module(name), mVcdFile(0) {
    xin_M_real_V_U = new FFT_xin_M_real_V("xin_M_real_V_U");
    xin_M_real_V_U->clk(ap_clk);
    xin_M_real_V_U->reset(ap_rst_n_inv);
    xin_M_real_V_U->address0(xin_M_real_V_address0);
    xin_M_real_V_U->ce0(xin_M_real_V_ce0);
    xin_M_real_V_U->we0(xin_M_real_V_we0);
    xin_M_real_V_U->d0(xin_M_real_V_d0);
    xin_M_real_V_U->q0(xin_M_real_V_q0);
    xin_M_imag_V_U = new FFT_xin_M_real_V("xin_M_imag_V_U");
    xin_M_imag_V_U->clk(ap_clk);
    xin_M_imag_V_U->reset(ap_rst_n_inv);
    xin_M_imag_V_U->address0(xin_M_imag_V_address0);
    xin_M_imag_V_U->ce0(xin_M_imag_V_ce0);
    xin_M_imag_V_U->we0(xin_M_imag_V_we0);
    xin_M_imag_V_U->d0(xin_M_imag_V_d0);
    xin_M_imag_V_U->q0(xin_M_imag_V_q0);
    rev_32_U = new FFT_rev_32("rev_32_U");
    rev_32_U->clk(ap_clk);
    rev_32_U->reset(ap_rst_n_inv);
    rev_32_U->address0(rev_32_address0);
    rev_32_U->ce0(rev_32_ce0);
    rev_32_U->q0(rev_32_q0);
    data_OUT0_M_real_V_U = new FFT_xin_M_real_V("data_OUT0_M_real_V_U");
    data_OUT0_M_real_V_U->clk(ap_clk);
    data_OUT0_M_real_V_U->reset(ap_rst_n_inv);
    data_OUT0_M_real_V_U->address0(data_OUT0_M_real_V_address0);
    data_OUT0_M_real_V_U->ce0(data_OUT0_M_real_V_ce0);
    data_OUT0_M_real_V_U->we0(data_OUT0_M_real_V_we0);
    data_OUT0_M_real_V_U->d0(xin_M_real_V_q0);
    data_OUT0_M_real_V_U->q0(data_OUT0_M_real_V_q0);
    data_OUT0_M_imag_V_U = new FFT_xin_M_real_V("data_OUT0_M_imag_V_U");
    data_OUT0_M_imag_V_U->clk(ap_clk);
    data_OUT0_M_imag_V_U->reset(ap_rst_n_inv);
    data_OUT0_M_imag_V_U->address0(data_OUT0_M_imag_V_address0);
    data_OUT0_M_imag_V_U->ce0(data_OUT0_M_imag_V_ce0);
    data_OUT0_M_imag_V_U->we0(data_OUT0_M_imag_V_we0);
    data_OUT0_M_imag_V_U->d0(xin_M_imag_V_q0);
    data_OUT0_M_imag_V_U->q0(data_OUT0_M_imag_V_q0);
    data_OUT1_M_real_V_U = new FFT_xin_M_real_V("data_OUT1_M_real_V_U");
    data_OUT1_M_real_V_U->clk(ap_clk);
    data_OUT1_M_real_V_U->reset(ap_rst_n_inv);
    data_OUT1_M_real_V_U->address0(data_OUT1_M_real_V_address0);
    data_OUT1_M_real_V_U->ce0(data_OUT1_M_real_V_ce0);
    data_OUT1_M_real_V_U->we0(data_OUT1_M_real_V_we0);
    data_OUT1_M_real_V_U->d0(grp_FFT0_fu_261_data_OUT_M_real_V_d0);
    data_OUT1_M_real_V_U->q0(data_OUT1_M_real_V_q0);
    data_OUT1_M_imag_V_U = new FFT_xin_M_real_V("data_OUT1_M_imag_V_U");
    data_OUT1_M_imag_V_U->clk(ap_clk);
    data_OUT1_M_imag_V_U->reset(ap_rst_n_inv);
    data_OUT1_M_imag_V_U->address0(data_OUT1_M_imag_V_address0);
    data_OUT1_M_imag_V_U->ce0(data_OUT1_M_imag_V_ce0);
    data_OUT1_M_imag_V_U->we0(data_OUT1_M_imag_V_we0);
    data_OUT1_M_imag_V_U->d0(grp_FFT0_fu_261_data_OUT_M_imag_V_d0);
    data_OUT1_M_imag_V_U->q0(data_OUT1_M_imag_V_q0);
    data_OUT2_M_real_V_U = new FFT_xin_M_real_V("data_OUT2_M_real_V_U");
    data_OUT2_M_real_V_U->clk(ap_clk);
    data_OUT2_M_real_V_U->reset(ap_rst_n_inv);
    data_OUT2_M_real_V_U->address0(data_OUT2_M_real_V_address0);
    data_OUT2_M_real_V_U->ce0(data_OUT2_M_real_V_ce0);
    data_OUT2_M_real_V_U->we0(data_OUT2_M_real_V_we0);
    data_OUT2_M_real_V_U->d0(grp_FFT0_fu_261_data_OUT_M_real_V_d0);
    data_OUT2_M_real_V_U->q0(data_OUT2_M_real_V_q0);
    data_OUT2_M_imag_V_U = new FFT_xin_M_real_V("data_OUT2_M_imag_V_U");
    data_OUT2_M_imag_V_U->clk(ap_clk);
    data_OUT2_M_imag_V_U->reset(ap_rst_n_inv);
    data_OUT2_M_imag_V_U->address0(data_OUT2_M_imag_V_address0);
    data_OUT2_M_imag_V_U->ce0(data_OUT2_M_imag_V_ce0);
    data_OUT2_M_imag_V_U->we0(data_OUT2_M_imag_V_we0);
    data_OUT2_M_imag_V_U->d0(grp_FFT0_fu_261_data_OUT_M_imag_V_d0);
    data_OUT2_M_imag_V_U->q0(data_OUT2_M_imag_V_q0);
    data_OUT3_M_real_V_U = new FFT_xin_M_real_V("data_OUT3_M_real_V_U");
    data_OUT3_M_real_V_U->clk(ap_clk);
    data_OUT3_M_real_V_U->reset(ap_rst_n_inv);
    data_OUT3_M_real_V_U->address0(data_OUT3_M_real_V_address0);
    data_OUT3_M_real_V_U->ce0(data_OUT3_M_real_V_ce0);
    data_OUT3_M_real_V_U->we0(data_OUT3_M_real_V_we0);
    data_OUT3_M_real_V_U->d0(grp_FFT0_fu_261_data_OUT_M_real_V_d0);
    data_OUT3_M_real_V_U->q0(data_OUT3_M_real_V_q0);
    data_OUT3_M_imag_V_U = new FFT_xin_M_real_V("data_OUT3_M_imag_V_U");
    data_OUT3_M_imag_V_U->clk(ap_clk);
    data_OUT3_M_imag_V_U->reset(ap_rst_n_inv);
    data_OUT3_M_imag_V_U->address0(data_OUT3_M_imag_V_address0);
    data_OUT3_M_imag_V_U->ce0(data_OUT3_M_imag_V_ce0);
    data_OUT3_M_imag_V_U->we0(data_OUT3_M_imag_V_we0);
    data_OUT3_M_imag_V_U->d0(grp_FFT0_fu_261_data_OUT_M_imag_V_d0);
    data_OUT3_M_imag_V_U->q0(data_OUT3_M_imag_V_q0);
    data_OUT4_M_real_V_U = new FFT_xin_M_real_V("data_OUT4_M_real_V_U");
    data_OUT4_M_real_V_U->clk(ap_clk);
    data_OUT4_M_real_V_U->reset(ap_rst_n_inv);
    data_OUT4_M_real_V_U->address0(data_OUT4_M_real_V_address0);
    data_OUT4_M_real_V_U->ce0(data_OUT4_M_real_V_ce0);
    data_OUT4_M_real_V_U->we0(data_OUT4_M_real_V_we0);
    data_OUT4_M_real_V_U->d0(grp_FFT0_fu_261_data_OUT_M_real_V_d0);
    data_OUT4_M_real_V_U->q0(data_OUT4_M_real_V_q0);
    data_OUT4_M_imag_V_U = new FFT_xin_M_real_V("data_OUT4_M_imag_V_U");
    data_OUT4_M_imag_V_U->clk(ap_clk);
    data_OUT4_M_imag_V_U->reset(ap_rst_n_inv);
    data_OUT4_M_imag_V_U->address0(data_OUT4_M_imag_V_address0);
    data_OUT4_M_imag_V_U->ce0(data_OUT4_M_imag_V_ce0);
    data_OUT4_M_imag_V_U->we0(data_OUT4_M_imag_V_we0);
    data_OUT4_M_imag_V_U->d0(grp_FFT0_fu_261_data_OUT_M_imag_V_d0);
    data_OUT4_M_imag_V_U->q0(data_OUT4_M_imag_V_q0);
    xout_M_real_V_U = new FFT_xin_M_real_V("xout_M_real_V_U");
    xout_M_real_V_U->clk(ap_clk);
    xout_M_real_V_U->reset(ap_rst_n_inv);
    xout_M_real_V_U->address0(xout_M_real_V_address0);
    xout_M_real_V_U->ce0(xout_M_real_V_ce0);
    xout_M_real_V_U->we0(xout_M_real_V_we0);
    xout_M_real_V_U->d0(grp_FFT0_fu_261_data_OUT_M_real_V_d0);
    xout_M_real_V_U->q0(xout_M_real_V_q0);
    xout_M_imag_V_U = new FFT_xin_M_real_V("xout_M_imag_V_U");
    xout_M_imag_V_U->clk(ap_clk);
    xout_M_imag_V_U->reset(ap_rst_n_inv);
    xout_M_imag_V_U->address0(xout_M_imag_V_address0);
    xout_M_imag_V_U->ce0(xout_M_imag_V_ce0);
    xout_M_imag_V_U->we0(xout_M_imag_V_we0);
    xout_M_imag_V_U->d0(grp_FFT0_fu_261_data_OUT_M_imag_V_d0);
    xout_M_imag_V_U->q0(xout_M_imag_V_q0);
    grp_FFT0_fu_261 = new FFT0("grp_FFT0_fu_261");
    grp_FFT0_fu_261->ap_clk(ap_clk);
    grp_FFT0_fu_261->ap_rst(ap_rst_n_inv);
    grp_FFT0_fu_261->ap_start(grp_FFT0_fu_261_ap_start);
    grp_FFT0_fu_261->ap_done(grp_FFT0_fu_261_ap_done);
    grp_FFT0_fu_261->ap_idle(grp_FFT0_fu_261_ap_idle);
    grp_FFT0_fu_261->ap_ready(grp_FFT0_fu_261_ap_ready);
    grp_FFT0_fu_261->FFT_stage(grp_FFT0_fu_261_FFT_stage);
    grp_FFT0_fu_261->pass_check(grp_FFT0_fu_261_pass_check);
    grp_FFT0_fu_261->index_shift(grp_FFT0_fu_261_index_shift);
    grp_FFT0_fu_261->pass_shift(grp_FFT0_fu_261_pass_shift);
    grp_FFT0_fu_261->data_IN_M_real_V_address0(grp_FFT0_fu_261_data_IN_M_real_V_address0);
    grp_FFT0_fu_261->data_IN_M_real_V_ce0(grp_FFT0_fu_261_data_IN_M_real_V_ce0);
    grp_FFT0_fu_261->data_IN_M_real_V_q0(grp_FFT0_fu_261_data_IN_M_real_V_q0);
    grp_FFT0_fu_261->data_IN_M_imag_V_address0(grp_FFT0_fu_261_data_IN_M_imag_V_address0);
    grp_FFT0_fu_261->data_IN_M_imag_V_ce0(grp_FFT0_fu_261_data_IN_M_imag_V_ce0);
    grp_FFT0_fu_261->data_IN_M_imag_V_q0(grp_FFT0_fu_261_data_IN_M_imag_V_q0);
    grp_FFT0_fu_261->data_OUT_M_real_V_address0(grp_FFT0_fu_261_data_OUT_M_real_V_address0);
    grp_FFT0_fu_261->data_OUT_M_real_V_ce0(grp_FFT0_fu_261_data_OUT_M_real_V_ce0);
    grp_FFT0_fu_261->data_OUT_M_real_V_we0(grp_FFT0_fu_261_data_OUT_M_real_V_we0);
    grp_FFT0_fu_261->data_OUT_M_real_V_d0(grp_FFT0_fu_261_data_OUT_M_real_V_d0);
    grp_FFT0_fu_261->data_OUT_M_imag_V_address0(grp_FFT0_fu_261_data_OUT_M_imag_V_address0);
    grp_FFT0_fu_261->data_OUT_M_imag_V_ce0(grp_FFT0_fu_261_data_OUT_M_imag_V_ce0);
    grp_FFT0_fu_261->data_OUT_M_imag_V_we0(grp_FFT0_fu_261_data_OUT_M_imag_V_we0);
    grp_FFT0_fu_261->data_OUT_M_imag_V_d0(grp_FFT0_fu_261_data_OUT_M_imag_V_d0);
    regslice_both_data_IN_U = new regslice_both<32>("regslice_both_data_IN_U");
    regslice_both_data_IN_U->ap_clk(ap_clk);
    regslice_both_data_IN_U->ap_rst(ap_rst_n_inv);
    regslice_both_data_IN_U->data_in(data_IN_TDATA);
    regslice_both_data_IN_U->vld_in(data_IN_TVALID);
    regslice_both_data_IN_U->ack_in(regslice_both_data_IN_U_ack_in);
    regslice_both_data_IN_U->data_out(data_IN_TDATA_int);
    regslice_both_data_IN_U->vld_out(data_IN_TVALID_int);
    regslice_both_data_IN_U->ack_out(data_IN_TREADY_int);
    regslice_both_data_IN_U->apdone_blk(regslice_both_data_IN_U_apdone_blk);
    regslice_both_data_OUT_U = new regslice_both<32>("regslice_both_data_OUT_U");
    regslice_both_data_OUT_U->ap_clk(ap_clk);
    regslice_both_data_OUT_U->ap_rst(ap_rst_n_inv);
    regslice_both_data_OUT_U->data_in(data_OUT_TDATA_int);
    regslice_both_data_OUT_U->vld_in(data_OUT_TVALID_int);
    regslice_both_data_OUT_U->ack_in(data_OUT_TREADY_int);
    regslice_both_data_OUT_U->data_out(data_OUT_TDATA);
    regslice_both_data_OUT_U->vld_out(regslice_both_data_OUT_U_vld_out);
    regslice_both_data_OUT_U->ack_out(data_OUT_TREADY);
    regslice_both_data_OUT_U->apdone_blk(regslice_both_data_OUT_U_apdone_blk);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state2);
    sensitive << ( icmp_ln58_fu_317_p2 );
    sensitive << ( data_IN_TVALID_int );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( regslice_both_data_OUT_U_apdone_blk );
    sensitive << ( icmp_ln68_fu_374_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( regslice_both_data_OUT_U_apdone_blk );
    sensitive << ( icmp_ln68_fu_374_p2 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_data_IN_TDATA_blk_n);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln58_fu_317_p2 );
    sensitive << ( data_IN_TVALID_int );

    SC_METHOD(thread_data_IN_TREADY);
    sensitive << ( data_IN_TVALID );
    sensitive << ( regslice_both_data_IN_U_ack_in );

    SC_METHOD(thread_data_IN_TREADY_int);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln58_fu_317_p2 );
    sensitive << ( data_IN_TVALID_int );

    SC_METHOD(thread_data_OUT0_M_imag_V_address0);
    sensitive << ( zext_ln18_reg_417 );
    sensitive << ( grp_FFT0_fu_261_data_IN_M_imag_V_address0 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_data_OUT0_M_imag_V_ce0);
    sensitive << ( grp_FFT0_fu_261_data_IN_M_imag_V_ce0 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_data_OUT0_M_imag_V_we0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_data_OUT0_M_real_V_address0);
    sensitive << ( zext_ln18_reg_417 );
    sensitive << ( grp_FFT0_fu_261_data_IN_M_real_V_address0 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_data_OUT0_M_real_V_ce0);
    sensitive << ( grp_FFT0_fu_261_data_IN_M_real_V_ce0 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_data_OUT0_M_real_V_we0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_data_OUT1_M_imag_V_address0);
    sensitive << ( grp_FFT0_fu_261_data_IN_M_imag_V_address0 );
    sensitive << ( grp_FFT0_fu_261_data_OUT_M_imag_V_address0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_data_OUT1_M_imag_V_ce0);
    sensitive << ( grp_FFT0_fu_261_data_IN_M_imag_V_ce0 );
    sensitive << ( grp_FFT0_fu_261_data_OUT_M_imag_V_ce0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_data_OUT1_M_imag_V_we0);
    sensitive << ( grp_FFT0_fu_261_data_OUT_M_imag_V_we0 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_data_OUT1_M_real_V_address0);
    sensitive << ( grp_FFT0_fu_261_data_IN_M_real_V_address0 );
    sensitive << ( grp_FFT0_fu_261_data_OUT_M_real_V_address0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_data_OUT1_M_real_V_ce0);
    sensitive << ( grp_FFT0_fu_261_data_IN_M_real_V_ce0 );
    sensitive << ( grp_FFT0_fu_261_data_OUT_M_real_V_ce0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_data_OUT1_M_real_V_we0);
    sensitive << ( grp_FFT0_fu_261_data_OUT_M_real_V_we0 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_data_OUT2_M_imag_V_address0);
    sensitive << ( grp_FFT0_fu_261_data_IN_M_imag_V_address0 );
    sensitive << ( grp_FFT0_fu_261_data_OUT_M_imag_V_address0 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_data_OUT2_M_imag_V_ce0);
    sensitive << ( grp_FFT0_fu_261_data_IN_M_imag_V_ce0 );
    sensitive << ( grp_FFT0_fu_261_data_OUT_M_imag_V_ce0 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_data_OUT2_M_imag_V_we0);
    sensitive << ( grp_FFT0_fu_261_data_OUT_M_imag_V_we0 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_data_OUT2_M_real_V_address0);
    sensitive << ( grp_FFT0_fu_261_data_IN_M_real_V_address0 );
    sensitive << ( grp_FFT0_fu_261_data_OUT_M_real_V_address0 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_data_OUT2_M_real_V_ce0);
    sensitive << ( grp_FFT0_fu_261_data_IN_M_real_V_ce0 );
    sensitive << ( grp_FFT0_fu_261_data_OUT_M_real_V_ce0 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_data_OUT2_M_real_V_we0);
    sensitive << ( grp_FFT0_fu_261_data_OUT_M_real_V_we0 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_data_OUT3_M_imag_V_address0);
    sensitive << ( grp_FFT0_fu_261_data_IN_M_imag_V_address0 );
    sensitive << ( grp_FFT0_fu_261_data_OUT_M_imag_V_address0 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_data_OUT3_M_imag_V_ce0);
    sensitive << ( grp_FFT0_fu_261_data_IN_M_imag_V_ce0 );
    sensitive << ( grp_FFT0_fu_261_data_OUT_M_imag_V_ce0 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_data_OUT3_M_imag_V_we0);
    sensitive << ( grp_FFT0_fu_261_data_OUT_M_imag_V_we0 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_data_OUT3_M_real_V_address0);
    sensitive << ( grp_FFT0_fu_261_data_IN_M_real_V_address0 );
    sensitive << ( grp_FFT0_fu_261_data_OUT_M_real_V_address0 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_data_OUT3_M_real_V_ce0);
    sensitive << ( grp_FFT0_fu_261_data_IN_M_real_V_ce0 );
    sensitive << ( grp_FFT0_fu_261_data_OUT_M_real_V_ce0 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_data_OUT3_M_real_V_we0);
    sensitive << ( grp_FFT0_fu_261_data_OUT_M_real_V_we0 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_data_OUT4_M_imag_V_address0);
    sensitive << ( grp_FFT0_fu_261_data_IN_M_imag_V_address0 );
    sensitive << ( grp_FFT0_fu_261_data_OUT_M_imag_V_address0 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_data_OUT4_M_imag_V_ce0);
    sensitive << ( grp_FFT0_fu_261_data_IN_M_imag_V_ce0 );
    sensitive << ( grp_FFT0_fu_261_data_OUT_M_imag_V_ce0 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_data_OUT4_M_imag_V_we0);
    sensitive << ( grp_FFT0_fu_261_data_OUT_M_imag_V_we0 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_data_OUT4_M_real_V_address0);
    sensitive << ( grp_FFT0_fu_261_data_IN_M_real_V_address0 );
    sensitive << ( grp_FFT0_fu_261_data_OUT_M_real_V_address0 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_data_OUT4_M_real_V_ce0);
    sensitive << ( grp_FFT0_fu_261_data_IN_M_real_V_ce0 );
    sensitive << ( grp_FFT0_fu_261_data_OUT_M_real_V_ce0 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_data_OUT4_M_real_V_we0);
    sensitive << ( grp_FFT0_fu_261_data_OUT_M_real_V_we0 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_data_OUT_TDATA_blk_n);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( data_OUT_TREADY_int );

    SC_METHOD(thread_data_OUT_TDATA_int);
    sensitive << ( xout_M_real_V_q0 );
    sensitive << ( xout_M_imag_V_q0 );
    sensitive << ( ap_CS_fsm_state16 );

    SC_METHOD(thread_data_OUT_TVALID);
    sensitive << ( regslice_both_data_OUT_U_vld_out );

    SC_METHOD(thread_data_OUT_TVALID_int);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( data_OUT_TREADY_int );

    SC_METHOD(thread_grp_FFT0_fu_261_FFT_stage);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_grp_FFT0_fu_261_ap_start);
    sensitive << ( grp_FFT0_fu_261_ap_start_reg );

    SC_METHOD(thread_grp_FFT0_fu_261_data_IN_M_imag_V_q0);
    sensitive << ( data_OUT0_M_imag_V_q0 );
    sensitive << ( data_OUT1_M_imag_V_q0 );
    sensitive << ( data_OUT2_M_imag_V_q0 );
    sensitive << ( data_OUT3_M_imag_V_q0 );
    sensitive << ( data_OUT4_M_imag_V_q0 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_grp_FFT0_fu_261_data_IN_M_real_V_q0);
    sensitive << ( data_OUT0_M_real_V_q0 );
    sensitive << ( data_OUT1_M_real_V_q0 );
    sensitive << ( data_OUT2_M_real_V_q0 );
    sensitive << ( data_OUT3_M_real_V_q0 );
    sensitive << ( data_OUT4_M_real_V_q0 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_grp_FFT0_fu_261_index_shift);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_grp_FFT0_fu_261_pass_check);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_grp_FFT0_fu_261_pass_shift);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_i_1_fu_357_p2);
    sensitive << ( i_0_i_reg_239 );

    SC_METHOD(thread_i_2_fu_380_p2);
    sensitive << ( i1_0_reg_250 );

    SC_METHOD(thread_i_fu_323_p2);
    sensitive << ( i_0_reg_228 );

    SC_METHOD(thread_icmp_ln17_fu_351_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( i_0_i_reg_239 );

    SC_METHOD(thread_icmp_ln58_fu_317_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln58_fu_317_p2 );
    sensitive << ( i_0_reg_228 );
    sensitive << ( data_IN_TVALID_int );

    SC_METHOD(thread_icmp_ln68_fu_374_p2);
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( regslice_both_data_OUT_U_apdone_blk );
    sensitive << ( i1_0_reg_250 );

    SC_METHOD(thread_rev_32_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln18_fu_363_p1 );

    SC_METHOD(thread_rev_32_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_xin_M_imag_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( zext_ln58_fu_329_p1 );
    sensitive << ( zext_ln19_fu_368_p1 );

    SC_METHOD(thread_xin_M_imag_V_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln58_fu_317_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( data_IN_TVALID_int );

    SC_METHOD(thread_xin_M_imag_V_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( data_IN_TDATA_int );

    SC_METHOD(thread_xin_M_imag_V_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln58_fu_317_p2 );
    sensitive << ( data_IN_TVALID_int );

    SC_METHOD(thread_xin_M_real_V_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( zext_ln58_fu_329_p1 );
    sensitive << ( zext_ln19_fu_368_p1 );

    SC_METHOD(thread_xin_M_real_V_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln58_fu_317_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( data_IN_TVALID_int );

    SC_METHOD(thread_xin_M_real_V_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( data_IN_TDATA_int );

    SC_METHOD(thread_xin_M_real_V_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln58_fu_317_p2 );
    sensitive << ( data_IN_TVALID_int );

    SC_METHOD(thread_xout_M_imag_V_address0);
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( grp_FFT0_fu_261_data_OUT_M_imag_V_address0 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( zext_ln68_fu_386_p1 );

    SC_METHOD(thread_xout_M_imag_V_ce0);
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( regslice_both_data_OUT_U_apdone_blk );
    sensitive << ( grp_FFT0_fu_261_data_OUT_M_imag_V_ce0 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_xout_M_imag_V_we0);
    sensitive << ( grp_FFT0_fu_261_data_OUT_M_imag_V_we0 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_xout_M_real_V_address0);
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( grp_FFT0_fu_261_data_OUT_M_real_V_address0 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( zext_ln68_fu_386_p1 );

    SC_METHOD(thread_xout_M_real_V_ce0);
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( regslice_both_data_OUT_U_apdone_blk );
    sensitive << ( grp_FFT0_fu_261_data_OUT_M_real_V_ce0 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_xout_M_real_V_we0);
    sensitive << ( grp_FFT0_fu_261_data_OUT_M_real_V_we0 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_zext_ln18_fu_363_p1);
    sensitive << ( i_0_i_reg_239 );

    SC_METHOD(thread_zext_ln19_fu_368_p1);
    sensitive << ( rev_32_q0 );

    SC_METHOD(thread_zext_ln58_fu_329_p1);
    sensitive << ( i_0_reg_228 );

    SC_METHOD(thread_zext_ln68_fu_386_p1);
    sensitive << ( i1_0_reg_250 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln58_fu_317_p2 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln17_fu_351_p2 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( regslice_both_data_OUT_U_apdone_blk );
    sensitive << ( icmp_ln68_fu_374_p2 );
    sensitive << ( grp_FFT0_fu_261_ap_done );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( data_IN_TVALID_int );
    sensitive << ( data_OUT_TREADY_int );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "00000000000000001";
    grp_FFT0_fu_261_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "FFT_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, data_IN_TDATA, "(port)data_IN_TDATA");
    sc_trace(mVcdFile, data_IN_TVALID, "(port)data_IN_TVALID");
    sc_trace(mVcdFile, data_IN_TREADY, "(port)data_IN_TREADY");
    sc_trace(mVcdFile, data_OUT_TDATA, "(port)data_OUT_TDATA");
    sc_trace(mVcdFile, data_OUT_TVALID, "(port)data_OUT_TVALID");
    sc_trace(mVcdFile, data_OUT_TREADY, "(port)data_OUT_TREADY");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, xin_M_real_V_address0, "xin_M_real_V_address0");
    sc_trace(mVcdFile, xin_M_real_V_ce0, "xin_M_real_V_ce0");
    sc_trace(mVcdFile, xin_M_real_V_we0, "xin_M_real_V_we0");
    sc_trace(mVcdFile, xin_M_real_V_d0, "xin_M_real_V_d0");
    sc_trace(mVcdFile, xin_M_real_V_q0, "xin_M_real_V_q0");
    sc_trace(mVcdFile, xin_M_imag_V_address0, "xin_M_imag_V_address0");
    sc_trace(mVcdFile, xin_M_imag_V_ce0, "xin_M_imag_V_ce0");
    sc_trace(mVcdFile, xin_M_imag_V_we0, "xin_M_imag_V_we0");
    sc_trace(mVcdFile, xin_M_imag_V_d0, "xin_M_imag_V_d0");
    sc_trace(mVcdFile, xin_M_imag_V_q0, "xin_M_imag_V_q0");
    sc_trace(mVcdFile, rev_32_address0, "rev_32_address0");
    sc_trace(mVcdFile, rev_32_ce0, "rev_32_ce0");
    sc_trace(mVcdFile, rev_32_q0, "rev_32_q0");
    sc_trace(mVcdFile, data_OUT0_M_real_V_address0, "data_OUT0_M_real_V_address0");
    sc_trace(mVcdFile, data_OUT0_M_real_V_ce0, "data_OUT0_M_real_V_ce0");
    sc_trace(mVcdFile, data_OUT0_M_real_V_we0, "data_OUT0_M_real_V_we0");
    sc_trace(mVcdFile, data_OUT0_M_real_V_q0, "data_OUT0_M_real_V_q0");
    sc_trace(mVcdFile, data_OUT0_M_imag_V_address0, "data_OUT0_M_imag_V_address0");
    sc_trace(mVcdFile, data_OUT0_M_imag_V_ce0, "data_OUT0_M_imag_V_ce0");
    sc_trace(mVcdFile, data_OUT0_M_imag_V_we0, "data_OUT0_M_imag_V_we0");
    sc_trace(mVcdFile, data_OUT0_M_imag_V_q0, "data_OUT0_M_imag_V_q0");
    sc_trace(mVcdFile, data_OUT1_M_real_V_address0, "data_OUT1_M_real_V_address0");
    sc_trace(mVcdFile, data_OUT1_M_real_V_ce0, "data_OUT1_M_real_V_ce0");
    sc_trace(mVcdFile, data_OUT1_M_real_V_we0, "data_OUT1_M_real_V_we0");
    sc_trace(mVcdFile, data_OUT1_M_real_V_q0, "data_OUT1_M_real_V_q0");
    sc_trace(mVcdFile, data_OUT1_M_imag_V_address0, "data_OUT1_M_imag_V_address0");
    sc_trace(mVcdFile, data_OUT1_M_imag_V_ce0, "data_OUT1_M_imag_V_ce0");
    sc_trace(mVcdFile, data_OUT1_M_imag_V_we0, "data_OUT1_M_imag_V_we0");
    sc_trace(mVcdFile, data_OUT1_M_imag_V_q0, "data_OUT1_M_imag_V_q0");
    sc_trace(mVcdFile, data_OUT2_M_real_V_address0, "data_OUT2_M_real_V_address0");
    sc_trace(mVcdFile, data_OUT2_M_real_V_ce0, "data_OUT2_M_real_V_ce0");
    sc_trace(mVcdFile, data_OUT2_M_real_V_we0, "data_OUT2_M_real_V_we0");
    sc_trace(mVcdFile, data_OUT2_M_real_V_q0, "data_OUT2_M_real_V_q0");
    sc_trace(mVcdFile, data_OUT2_M_imag_V_address0, "data_OUT2_M_imag_V_address0");
    sc_trace(mVcdFile, data_OUT2_M_imag_V_ce0, "data_OUT2_M_imag_V_ce0");
    sc_trace(mVcdFile, data_OUT2_M_imag_V_we0, "data_OUT2_M_imag_V_we0");
    sc_trace(mVcdFile, data_OUT2_M_imag_V_q0, "data_OUT2_M_imag_V_q0");
    sc_trace(mVcdFile, data_OUT3_M_real_V_address0, "data_OUT3_M_real_V_address0");
    sc_trace(mVcdFile, data_OUT3_M_real_V_ce0, "data_OUT3_M_real_V_ce0");
    sc_trace(mVcdFile, data_OUT3_M_real_V_we0, "data_OUT3_M_real_V_we0");
    sc_trace(mVcdFile, data_OUT3_M_real_V_q0, "data_OUT3_M_real_V_q0");
    sc_trace(mVcdFile, data_OUT3_M_imag_V_address0, "data_OUT3_M_imag_V_address0");
    sc_trace(mVcdFile, data_OUT3_M_imag_V_ce0, "data_OUT3_M_imag_V_ce0");
    sc_trace(mVcdFile, data_OUT3_M_imag_V_we0, "data_OUT3_M_imag_V_we0");
    sc_trace(mVcdFile, data_OUT3_M_imag_V_q0, "data_OUT3_M_imag_V_q0");
    sc_trace(mVcdFile, data_OUT4_M_real_V_address0, "data_OUT4_M_real_V_address0");
    sc_trace(mVcdFile, data_OUT4_M_real_V_ce0, "data_OUT4_M_real_V_ce0");
    sc_trace(mVcdFile, data_OUT4_M_real_V_we0, "data_OUT4_M_real_V_we0");
    sc_trace(mVcdFile, data_OUT4_M_real_V_q0, "data_OUT4_M_real_V_q0");
    sc_trace(mVcdFile, data_OUT4_M_imag_V_address0, "data_OUT4_M_imag_V_address0");
    sc_trace(mVcdFile, data_OUT4_M_imag_V_ce0, "data_OUT4_M_imag_V_ce0");
    sc_trace(mVcdFile, data_OUT4_M_imag_V_we0, "data_OUT4_M_imag_V_we0");
    sc_trace(mVcdFile, data_OUT4_M_imag_V_q0, "data_OUT4_M_imag_V_q0");
    sc_trace(mVcdFile, xout_M_real_V_address0, "xout_M_real_V_address0");
    sc_trace(mVcdFile, xout_M_real_V_ce0, "xout_M_real_V_ce0");
    sc_trace(mVcdFile, xout_M_real_V_we0, "xout_M_real_V_we0");
    sc_trace(mVcdFile, xout_M_real_V_q0, "xout_M_real_V_q0");
    sc_trace(mVcdFile, xout_M_imag_V_address0, "xout_M_imag_V_address0");
    sc_trace(mVcdFile, xout_M_imag_V_ce0, "xout_M_imag_V_ce0");
    sc_trace(mVcdFile, xout_M_imag_V_we0, "xout_M_imag_V_we0");
    sc_trace(mVcdFile, xout_M_imag_V_q0, "xout_M_imag_V_q0");
    sc_trace(mVcdFile, data_IN_TDATA_blk_n, "data_IN_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, icmp_ln58_fu_317_p2, "icmp_ln58_fu_317_p2");
    sc_trace(mVcdFile, data_OUT_TDATA_blk_n, "data_OUT_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, i_fu_323_p2, "i_fu_323_p2");
    sc_trace(mVcdFile, ap_block_state2, "ap_block_state2");
    sc_trace(mVcdFile, i_1_fu_357_p2, "i_1_fu_357_p2");
    sc_trace(mVcdFile, i_1_reg_412, "i_1_reg_412");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, zext_ln18_fu_363_p1, "zext_ln18_fu_363_p1");
    sc_trace(mVcdFile, zext_ln18_reg_417, "zext_ln18_reg_417");
    sc_trace(mVcdFile, icmp_ln17_fu_351_p2, "icmp_ln17_fu_351_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, i_2_fu_380_p2, "i_2_fu_380_p2");
    sc_trace(mVcdFile, i_2_reg_441, "i_2_reg_441");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, regslice_both_data_OUT_U_apdone_blk, "regslice_both_data_OUT_U_apdone_blk");
    sc_trace(mVcdFile, icmp_ln68_fu_374_p2, "icmp_ln68_fu_374_p2");
    sc_trace(mVcdFile, grp_FFT0_fu_261_ap_start, "grp_FFT0_fu_261_ap_start");
    sc_trace(mVcdFile, grp_FFT0_fu_261_ap_done, "grp_FFT0_fu_261_ap_done");
    sc_trace(mVcdFile, grp_FFT0_fu_261_ap_idle, "grp_FFT0_fu_261_ap_idle");
    sc_trace(mVcdFile, grp_FFT0_fu_261_ap_ready, "grp_FFT0_fu_261_ap_ready");
    sc_trace(mVcdFile, grp_FFT0_fu_261_FFT_stage, "grp_FFT0_fu_261_FFT_stage");
    sc_trace(mVcdFile, grp_FFT0_fu_261_pass_check, "grp_FFT0_fu_261_pass_check");
    sc_trace(mVcdFile, grp_FFT0_fu_261_index_shift, "grp_FFT0_fu_261_index_shift");
    sc_trace(mVcdFile, grp_FFT0_fu_261_pass_shift, "grp_FFT0_fu_261_pass_shift");
    sc_trace(mVcdFile, grp_FFT0_fu_261_data_IN_M_real_V_address0, "grp_FFT0_fu_261_data_IN_M_real_V_address0");
    sc_trace(mVcdFile, grp_FFT0_fu_261_data_IN_M_real_V_ce0, "grp_FFT0_fu_261_data_IN_M_real_V_ce0");
    sc_trace(mVcdFile, grp_FFT0_fu_261_data_IN_M_real_V_q0, "grp_FFT0_fu_261_data_IN_M_real_V_q0");
    sc_trace(mVcdFile, grp_FFT0_fu_261_data_IN_M_imag_V_address0, "grp_FFT0_fu_261_data_IN_M_imag_V_address0");
    sc_trace(mVcdFile, grp_FFT0_fu_261_data_IN_M_imag_V_ce0, "grp_FFT0_fu_261_data_IN_M_imag_V_ce0");
    sc_trace(mVcdFile, grp_FFT0_fu_261_data_IN_M_imag_V_q0, "grp_FFT0_fu_261_data_IN_M_imag_V_q0");
    sc_trace(mVcdFile, grp_FFT0_fu_261_data_OUT_M_real_V_address0, "grp_FFT0_fu_261_data_OUT_M_real_V_address0");
    sc_trace(mVcdFile, grp_FFT0_fu_261_data_OUT_M_real_V_ce0, "grp_FFT0_fu_261_data_OUT_M_real_V_ce0");
    sc_trace(mVcdFile, grp_FFT0_fu_261_data_OUT_M_real_V_we0, "grp_FFT0_fu_261_data_OUT_M_real_V_we0");
    sc_trace(mVcdFile, grp_FFT0_fu_261_data_OUT_M_real_V_d0, "grp_FFT0_fu_261_data_OUT_M_real_V_d0");
    sc_trace(mVcdFile, grp_FFT0_fu_261_data_OUT_M_imag_V_address0, "grp_FFT0_fu_261_data_OUT_M_imag_V_address0");
    sc_trace(mVcdFile, grp_FFT0_fu_261_data_OUT_M_imag_V_ce0, "grp_FFT0_fu_261_data_OUT_M_imag_V_ce0");
    sc_trace(mVcdFile, grp_FFT0_fu_261_data_OUT_M_imag_V_we0, "grp_FFT0_fu_261_data_OUT_M_imag_V_we0");
    sc_trace(mVcdFile, grp_FFT0_fu_261_data_OUT_M_imag_V_d0, "grp_FFT0_fu_261_data_OUT_M_imag_V_d0");
    sc_trace(mVcdFile, i_0_reg_228, "i_0_reg_228");
    sc_trace(mVcdFile, i_0_i_reg_239, "i_0_i_reg_239");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, i1_0_reg_250, "i1_0_reg_250");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, grp_FFT0_fu_261_ap_start_reg, "grp_FFT0_fu_261_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, zext_ln58_fu_329_p1, "zext_ln58_fu_329_p1");
    sc_trace(mVcdFile, zext_ln19_fu_368_p1, "zext_ln19_fu_368_p1");
    sc_trace(mVcdFile, zext_ln68_fu_386_p1, "zext_ln68_fu_386_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, regslice_both_data_IN_U_apdone_blk, "regslice_both_data_IN_U_apdone_blk");
    sc_trace(mVcdFile, data_IN_TDATA_int, "data_IN_TDATA_int");
    sc_trace(mVcdFile, data_IN_TVALID_int, "data_IN_TVALID_int");
    sc_trace(mVcdFile, data_IN_TREADY_int, "data_IN_TREADY_int");
    sc_trace(mVcdFile, regslice_both_data_IN_U_ack_in, "regslice_both_data_IN_U_ack_in");
    sc_trace(mVcdFile, data_OUT_TDATA_int, "data_OUT_TDATA_int");
    sc_trace(mVcdFile, data_OUT_TVALID_int, "data_OUT_TVALID_int");
    sc_trace(mVcdFile, data_OUT_TREADY_int, "data_OUT_TREADY_int");
    sc_trace(mVcdFile, regslice_both_data_OUT_U_vld_out, "regslice_both_data_OUT_U_vld_out");
#endif

    }
    mHdltvinHandle.open("FFT.hdltvin.dat");
    mHdltvoutHandle.open("FFT.hdltvout.dat");
}

FFT::~FFT() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete xin_M_real_V_U;
    delete xin_M_imag_V_U;
    delete rev_32_U;
    delete data_OUT0_M_real_V_U;
    delete data_OUT0_M_imag_V_U;
    delete data_OUT1_M_real_V_U;
    delete data_OUT1_M_imag_V_U;
    delete data_OUT2_M_real_V_U;
    delete data_OUT2_M_imag_V_U;
    delete data_OUT3_M_real_V_U;
    delete data_OUT3_M_imag_V_U;
    delete data_OUT4_M_real_V_U;
    delete data_OUT4_M_imag_V_U;
    delete xout_M_real_V_U;
    delete xout_M_imag_V_U;
    delete grp_FFT0_fu_261;
    delete regslice_both_data_IN_U;
    delete regslice_both_data_OUT_U;
}

void FFT::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        grp_FFT0_fu_261_ap_start_reg = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
              esl_seteq<1,1,1>(icmp_ln17_fu_351_p2.read(), ap_const_lv1_1)) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()))) {
            grp_FFT0_fu_261_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_FFT0_fu_261_ap_ready.read())) {
            grp_FFT0_fu_261_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
         esl_seteq<1,1,1>(data_OUT_TREADY_int.read(), ap_const_logic_1))) {
        i1_0_reg_250 = i_2_reg_441.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
                esl_seteq<1,1,1>(grp_FFT0_fu_261_ap_done.read(), ap_const_logic_1))) {
        i1_0_reg_250 = ap_const_lv6_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln58_fu_317_p2.read(), ap_const_lv1_1) && 
         !(esl_seteq<1,1,1>(icmp_ln58_fu_317_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, data_IN_TVALID_int.read())))) {
        i_0_i_reg_239 = ap_const_lv6_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        i_0_i_reg_239 = i_1_reg_412.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln58_fu_317_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(icmp_ln58_fu_317_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, data_IN_TVALID_int.read())))) {
        i_0_reg_228 = i_fu_323_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_228 = ap_const_lv6_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        i_1_reg_412 = i_1_fu_357_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && esl_seteq<1,1,1>(regslice_both_data_OUT_U_apdone_blk.read(), ap_const_logic_0))) {
        i_2_reg_441 = i_2_fu_380_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln17_fu_351_p2.read()))) {
        zext_ln18_reg_417 = zext_ln18_fu_363_p1.read();
    }
}

void FFT::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void FFT::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void FFT::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void FFT::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void FFT::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void FFT::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void FFT::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void FFT::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void FFT::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void FFT::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void FFT::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void FFT::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void FFT::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void FFT::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void FFT::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void FFT::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void FFT::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void FFT::thread_ap_block_state2() {
    ap_block_state2 = (esl_seteq<1,1,1>(icmp_ln58_fu_317_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, data_IN_TVALID_int.read()));
}

void FFT::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
         esl_seteq<1,1,1>(regslice_both_data_OUT_U_apdone_blk.read(), ap_const_logic_0) && 
         esl_seteq<1,1,1>(icmp_ln68_fu_374_p2.read(), ap_const_lv1_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void FFT::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void FFT::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
         esl_seteq<1,1,1>(regslice_both_data_OUT_U_apdone_blk.read(), ap_const_logic_0) && 
         esl_seteq<1,1,1>(icmp_ln68_fu_374_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void FFT::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void FFT::thread_data_IN_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln58_fu_317_p2.read(), ap_const_lv1_0))) {
        data_IN_TDATA_blk_n = data_IN_TVALID_int.read();
    } else {
        data_IN_TDATA_blk_n = ap_const_logic_1;
    }
}

void FFT::thread_data_IN_TREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, data_IN_TVALID.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, regslice_both_data_IN_U_ack_in.read()))) {
        data_IN_TREADY = ap_const_logic_1;
    } else {
        data_IN_TREADY = ap_const_logic_0;
    }
}

void FFT::thread_data_IN_TREADY_int() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln58_fu_317_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(icmp_ln58_fu_317_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, data_IN_TVALID_int.read())))) {
        data_IN_TREADY_int = ap_const_logic_1;
    } else {
        data_IN_TREADY_int = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT0_M_imag_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        data_OUT0_M_imag_V_address0 =  (sc_lv<5>) (zext_ln18_reg_417.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        data_OUT0_M_imag_V_address0 = grp_FFT0_fu_261_data_IN_M_imag_V_address0.read();
    } else {
        data_OUT0_M_imag_V_address0 = "XXXXX";
    }
}

void FFT::thread_data_OUT0_M_imag_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        data_OUT0_M_imag_V_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        data_OUT0_M_imag_V_ce0 = grp_FFT0_fu_261_data_IN_M_imag_V_ce0.read();
    } else {
        data_OUT0_M_imag_V_ce0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT0_M_imag_V_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        data_OUT0_M_imag_V_we0 = ap_const_logic_1;
    } else {
        data_OUT0_M_imag_V_we0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT0_M_real_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        data_OUT0_M_real_V_address0 =  (sc_lv<5>) (zext_ln18_reg_417.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        data_OUT0_M_real_V_address0 = grp_FFT0_fu_261_data_IN_M_real_V_address0.read();
    } else {
        data_OUT0_M_real_V_address0 = "XXXXX";
    }
}

void FFT::thread_data_OUT0_M_real_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        data_OUT0_M_real_V_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        data_OUT0_M_real_V_ce0 = grp_FFT0_fu_261_data_IN_M_real_V_ce0.read();
    } else {
        data_OUT0_M_real_V_ce0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT0_M_real_V_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        data_OUT0_M_real_V_we0 = ap_const_logic_1;
    } else {
        data_OUT0_M_real_V_we0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT1_M_imag_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        data_OUT1_M_imag_V_address0 = grp_FFT0_fu_261_data_OUT_M_imag_V_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        data_OUT1_M_imag_V_address0 = grp_FFT0_fu_261_data_IN_M_imag_V_address0.read();
    } else {
        data_OUT1_M_imag_V_address0 = "XXXXX";
    }
}

void FFT::thread_data_OUT1_M_imag_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        data_OUT1_M_imag_V_ce0 = grp_FFT0_fu_261_data_OUT_M_imag_V_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        data_OUT1_M_imag_V_ce0 = grp_FFT0_fu_261_data_IN_M_imag_V_ce0.read();
    } else {
        data_OUT1_M_imag_V_ce0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT1_M_imag_V_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        data_OUT1_M_imag_V_we0 = grp_FFT0_fu_261_data_OUT_M_imag_V_we0.read();
    } else {
        data_OUT1_M_imag_V_we0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT1_M_real_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        data_OUT1_M_real_V_address0 = grp_FFT0_fu_261_data_OUT_M_real_V_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        data_OUT1_M_real_V_address0 = grp_FFT0_fu_261_data_IN_M_real_V_address0.read();
    } else {
        data_OUT1_M_real_V_address0 = "XXXXX";
    }
}

void FFT::thread_data_OUT1_M_real_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        data_OUT1_M_real_V_ce0 = grp_FFT0_fu_261_data_OUT_M_real_V_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        data_OUT1_M_real_V_ce0 = grp_FFT0_fu_261_data_IN_M_real_V_ce0.read();
    } else {
        data_OUT1_M_real_V_ce0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT1_M_real_V_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        data_OUT1_M_real_V_we0 = grp_FFT0_fu_261_data_OUT_M_real_V_we0.read();
    } else {
        data_OUT1_M_real_V_we0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT2_M_imag_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        data_OUT2_M_imag_V_address0 = grp_FFT0_fu_261_data_OUT_M_imag_V_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        data_OUT2_M_imag_V_address0 = grp_FFT0_fu_261_data_IN_M_imag_V_address0.read();
    } else {
        data_OUT2_M_imag_V_address0 = "XXXXX";
    }
}

void FFT::thread_data_OUT2_M_imag_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        data_OUT2_M_imag_V_ce0 = grp_FFT0_fu_261_data_OUT_M_imag_V_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        data_OUT2_M_imag_V_ce0 = grp_FFT0_fu_261_data_IN_M_imag_V_ce0.read();
    } else {
        data_OUT2_M_imag_V_ce0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT2_M_imag_V_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        data_OUT2_M_imag_V_we0 = grp_FFT0_fu_261_data_OUT_M_imag_V_we0.read();
    } else {
        data_OUT2_M_imag_V_we0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT2_M_real_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        data_OUT2_M_real_V_address0 = grp_FFT0_fu_261_data_OUT_M_real_V_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        data_OUT2_M_real_V_address0 = grp_FFT0_fu_261_data_IN_M_real_V_address0.read();
    } else {
        data_OUT2_M_real_V_address0 = "XXXXX";
    }
}

void FFT::thread_data_OUT2_M_real_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        data_OUT2_M_real_V_ce0 = grp_FFT0_fu_261_data_OUT_M_real_V_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        data_OUT2_M_real_V_ce0 = grp_FFT0_fu_261_data_IN_M_real_V_ce0.read();
    } else {
        data_OUT2_M_real_V_ce0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT2_M_real_V_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        data_OUT2_M_real_V_we0 = grp_FFT0_fu_261_data_OUT_M_real_V_we0.read();
    } else {
        data_OUT2_M_real_V_we0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT3_M_imag_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        data_OUT3_M_imag_V_address0 = grp_FFT0_fu_261_data_OUT_M_imag_V_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        data_OUT3_M_imag_V_address0 = grp_FFT0_fu_261_data_IN_M_imag_V_address0.read();
    } else {
        data_OUT3_M_imag_V_address0 = "XXXXX";
    }
}

void FFT::thread_data_OUT3_M_imag_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        data_OUT3_M_imag_V_ce0 = grp_FFT0_fu_261_data_OUT_M_imag_V_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        data_OUT3_M_imag_V_ce0 = grp_FFT0_fu_261_data_IN_M_imag_V_ce0.read();
    } else {
        data_OUT3_M_imag_V_ce0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT3_M_imag_V_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        data_OUT3_M_imag_V_we0 = grp_FFT0_fu_261_data_OUT_M_imag_V_we0.read();
    } else {
        data_OUT3_M_imag_V_we0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT3_M_real_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        data_OUT3_M_real_V_address0 = grp_FFT0_fu_261_data_OUT_M_real_V_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        data_OUT3_M_real_V_address0 = grp_FFT0_fu_261_data_IN_M_real_V_address0.read();
    } else {
        data_OUT3_M_real_V_address0 = "XXXXX";
    }
}

void FFT::thread_data_OUT3_M_real_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        data_OUT3_M_real_V_ce0 = grp_FFT0_fu_261_data_OUT_M_real_V_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        data_OUT3_M_real_V_ce0 = grp_FFT0_fu_261_data_IN_M_real_V_ce0.read();
    } else {
        data_OUT3_M_real_V_ce0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT3_M_real_V_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        data_OUT3_M_real_V_we0 = grp_FFT0_fu_261_data_OUT_M_real_V_we0.read();
    } else {
        data_OUT3_M_real_V_we0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT4_M_imag_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        data_OUT4_M_imag_V_address0 = grp_FFT0_fu_261_data_OUT_M_imag_V_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        data_OUT4_M_imag_V_address0 = grp_FFT0_fu_261_data_IN_M_imag_V_address0.read();
    } else {
        data_OUT4_M_imag_V_address0 = "XXXXX";
    }
}

void FFT::thread_data_OUT4_M_imag_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        data_OUT4_M_imag_V_ce0 = grp_FFT0_fu_261_data_OUT_M_imag_V_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        data_OUT4_M_imag_V_ce0 = grp_FFT0_fu_261_data_IN_M_imag_V_ce0.read();
    } else {
        data_OUT4_M_imag_V_ce0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT4_M_imag_V_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        data_OUT4_M_imag_V_we0 = grp_FFT0_fu_261_data_OUT_M_imag_V_we0.read();
    } else {
        data_OUT4_M_imag_V_we0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT4_M_real_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        data_OUT4_M_real_V_address0 = grp_FFT0_fu_261_data_OUT_M_real_V_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        data_OUT4_M_real_V_address0 = grp_FFT0_fu_261_data_IN_M_real_V_address0.read();
    } else {
        data_OUT4_M_real_V_address0 = "XXXXX";
    }
}

void FFT::thread_data_OUT4_M_real_V_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        data_OUT4_M_real_V_ce0 = grp_FFT0_fu_261_data_OUT_M_real_V_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        data_OUT4_M_real_V_ce0 = grp_FFT0_fu_261_data_IN_M_real_V_ce0.read();
    } else {
        data_OUT4_M_real_V_ce0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT4_M_real_V_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        data_OUT4_M_real_V_we0 = grp_FFT0_fu_261_data_OUT_M_real_V_we0.read();
    } else {
        data_OUT4_M_real_V_we0 = ap_const_logic_0;
    }
}

void FFT::thread_data_OUT_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()))) {
        data_OUT_TDATA_blk_n = data_OUT_TREADY_int.read();
    } else {
        data_OUT_TDATA_blk_n = ap_const_logic_1;
    }
}

void FFT::thread_data_OUT_TDATA_int() {
    data_OUT_TDATA_int = esl_concat<16,16>(xout_M_imag_V_q0.read(), xout_M_real_V_q0.read());
}

void FFT::thread_data_OUT_TVALID() {
    data_OUT_TVALID = regslice_both_data_OUT_U_vld_out.read();
}

void FFT::thread_data_OUT_TVALID_int() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
         esl_seteq<1,1,1>(data_OUT_TREADY_int.read(), ap_const_logic_1))) {
        data_OUT_TVALID_int = ap_const_logic_1;
    } else {
        data_OUT_TVALID_int = ap_const_logic_0;
    }
}

void FFT::thread_grp_FFT0_fu_261_FFT_stage() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        grp_FFT0_fu_261_FFT_stage = ap_const_lv6_10;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        grp_FFT0_fu_261_FFT_stage = ap_const_lv6_8;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        grp_FFT0_fu_261_FFT_stage = ap_const_lv6_4;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        grp_FFT0_fu_261_FFT_stage = ap_const_lv6_2;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        grp_FFT0_fu_261_FFT_stage = ap_const_lv6_1;
    } else {
        grp_FFT0_fu_261_FFT_stage =  (sc_lv<6>) ("XXXXXX");
    }
}

void FFT::thread_grp_FFT0_fu_261_ap_start() {
    grp_FFT0_fu_261_ap_start = grp_FFT0_fu_261_ap_start_reg.read();
}

void FFT::thread_grp_FFT0_fu_261_data_IN_M_imag_V_q0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        grp_FFT0_fu_261_data_IN_M_imag_V_q0 = data_OUT4_M_imag_V_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        grp_FFT0_fu_261_data_IN_M_imag_V_q0 = data_OUT3_M_imag_V_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        grp_FFT0_fu_261_data_IN_M_imag_V_q0 = data_OUT2_M_imag_V_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        grp_FFT0_fu_261_data_IN_M_imag_V_q0 = data_OUT1_M_imag_V_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        grp_FFT0_fu_261_data_IN_M_imag_V_q0 = data_OUT0_M_imag_V_q0.read();
    } else {
        grp_FFT0_fu_261_data_IN_M_imag_V_q0 =  (sc_lv<16>) ("XXXXXXXXXXXXXXXX");
    }
}

void FFT::thread_grp_FFT0_fu_261_data_IN_M_real_V_q0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        grp_FFT0_fu_261_data_IN_M_real_V_q0 = data_OUT4_M_real_V_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        grp_FFT0_fu_261_data_IN_M_real_V_q0 = data_OUT3_M_real_V_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        grp_FFT0_fu_261_data_IN_M_real_V_q0 = data_OUT2_M_real_V_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        grp_FFT0_fu_261_data_IN_M_real_V_q0 = data_OUT1_M_real_V_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        grp_FFT0_fu_261_data_IN_M_real_V_q0 = data_OUT0_M_real_V_q0.read();
    } else {
        grp_FFT0_fu_261_data_IN_M_real_V_q0 =  (sc_lv<16>) ("XXXXXXXXXXXXXXXX");
    }
}

void FFT::thread_grp_FFT0_fu_261_index_shift() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        grp_FFT0_fu_261_index_shift = ap_const_lv4_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        grp_FFT0_fu_261_index_shift = ap_const_lv4_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        grp_FFT0_fu_261_index_shift = ap_const_lv4_2;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        grp_FFT0_fu_261_index_shift = ap_const_lv4_3;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        grp_FFT0_fu_261_index_shift = ap_const_lv4_4;
    } else {
        grp_FFT0_fu_261_index_shift =  (sc_lv<4>) ("XXXX");
    }
}

void FFT::thread_grp_FFT0_fu_261_pass_check() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        grp_FFT0_fu_261_pass_check = ap_const_lv6_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        grp_FFT0_fu_261_pass_check = ap_const_lv6_2;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        grp_FFT0_fu_261_pass_check = ap_const_lv6_4;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        grp_FFT0_fu_261_pass_check = ap_const_lv6_8;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        grp_FFT0_fu_261_pass_check = ap_const_lv6_10;
    } else {
        grp_FFT0_fu_261_pass_check =  (sc_lv<6>) ("XXXXXX");
    }
}

void FFT::thread_grp_FFT0_fu_261_pass_shift() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        grp_FFT0_fu_261_pass_shift = ap_const_lv4_5;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        grp_FFT0_fu_261_pass_shift = ap_const_lv4_4;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        grp_FFT0_fu_261_pass_shift = ap_const_lv4_3;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        grp_FFT0_fu_261_pass_shift = ap_const_lv4_2;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        grp_FFT0_fu_261_pass_shift = ap_const_lv4_1;
    } else {
        grp_FFT0_fu_261_pass_shift =  (sc_lv<4>) ("XXXX");
    }
}

void FFT::thread_i_1_fu_357_p2() {
    i_1_fu_357_p2 = (!i_0_i_reg_239.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(i_0_i_reg_239.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void FFT::thread_i_2_fu_380_p2() {
    i_2_fu_380_p2 = (!i1_0_reg_250.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(i1_0_reg_250.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void FFT::thread_i_fu_323_p2() {
    i_fu_323_p2 = (!i_0_reg_228.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(i_0_reg_228.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void FFT::thread_icmp_ln17_fu_351_p2() {
    icmp_ln17_fu_351_p2 = (!i_0_i_reg_239.read().is_01() || !ap_const_lv6_20.is_01())? sc_lv<1>(): sc_lv<1>(i_0_i_reg_239.read() == ap_const_lv6_20);
}

void FFT::thread_icmp_ln58_fu_317_p2() {
    icmp_ln58_fu_317_p2 = (!i_0_reg_228.read().is_01() || !ap_const_lv6_20.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_228.read() == ap_const_lv6_20);
}

void FFT::thread_icmp_ln68_fu_374_p2() {
    icmp_ln68_fu_374_p2 = (!i1_0_reg_250.read().is_01() || !ap_const_lv6_20.is_01())? sc_lv<1>(): sc_lv<1>(i1_0_reg_250.read() == ap_const_lv6_20);
}

void FFT::thread_rev_32_address0() {
    rev_32_address0 =  (sc_lv<5>) (zext_ln18_fu_363_p1.read());
}

void FFT::thread_rev_32_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        rev_32_ce0 = ap_const_logic_1;
    } else {
        rev_32_ce0 = ap_const_logic_0;
    }
}

void FFT::thread_xin_M_imag_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        xin_M_imag_V_address0 =  (sc_lv<5>) (zext_ln19_fu_368_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        xin_M_imag_V_address0 =  (sc_lv<5>) (zext_ln58_fu_329_p1.read());
    } else {
        xin_M_imag_V_address0 = "XXXXX";
    }
}

void FFT::thread_xin_M_imag_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          !(esl_seteq<1,1,1>(icmp_ln58_fu_317_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, data_IN_TVALID_int.read()))))) {
        xin_M_imag_V_ce0 = ap_const_logic_1;
    } else {
        xin_M_imag_V_ce0 = ap_const_logic_0;
    }
}

void FFT::thread_xin_M_imag_V_d0() {
    xin_M_imag_V_d0 = data_IN_TDATA_int.read().range(31, 16);
}

void FFT::thread_xin_M_imag_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln58_fu_317_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(icmp_ln58_fu_317_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, data_IN_TVALID_int.read())))) {
        xin_M_imag_V_we0 = ap_const_logic_1;
    } else {
        xin_M_imag_V_we0 = ap_const_logic_0;
    }
}

void FFT::thread_xin_M_real_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        xin_M_real_V_address0 =  (sc_lv<5>) (zext_ln19_fu_368_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        xin_M_real_V_address0 =  (sc_lv<5>) (zext_ln58_fu_329_p1.read());
    } else {
        xin_M_real_V_address0 = "XXXXX";
    }
}

void FFT::thread_xin_M_real_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          !(esl_seteq<1,1,1>(icmp_ln58_fu_317_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, data_IN_TVALID_int.read()))))) {
        xin_M_real_V_ce0 = ap_const_logic_1;
    } else {
        xin_M_real_V_ce0 = ap_const_logic_0;
    }
}

void FFT::thread_xin_M_real_V_d0() {
    xin_M_real_V_d0 = data_IN_TDATA_int.read().range(16-1, 0);
}

void FFT::thread_xin_M_real_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln58_fu_317_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(icmp_ln58_fu_317_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, data_IN_TVALID_int.read())))) {
        xin_M_real_V_we0 = ap_const_logic_1;
    } else {
        xin_M_real_V_we0 = ap_const_logic_0;
    }
}

void FFT::thread_xout_M_imag_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        xout_M_imag_V_address0 =  (sc_lv<5>) (zext_ln68_fu_386_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        xout_M_imag_V_address0 = grp_FFT0_fu_261_data_OUT_M_imag_V_address0.read();
    } else {
        xout_M_imag_V_address0 = "XXXXX";
    }
}

void FFT::thread_xout_M_imag_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
         esl_seteq<1,1,1>(regslice_both_data_OUT_U_apdone_blk.read(), ap_const_logic_0))) {
        xout_M_imag_V_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        xout_M_imag_V_ce0 = grp_FFT0_fu_261_data_OUT_M_imag_V_ce0.read();
    } else {
        xout_M_imag_V_ce0 = ap_const_logic_0;
    }
}

void FFT::thread_xout_M_imag_V_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        xout_M_imag_V_we0 = grp_FFT0_fu_261_data_OUT_M_imag_V_we0.read();
    } else {
        xout_M_imag_V_we0 = ap_const_logic_0;
    }
}

void FFT::thread_xout_M_real_V_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        xout_M_real_V_address0 =  (sc_lv<5>) (zext_ln68_fu_386_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        xout_M_real_V_address0 = grp_FFT0_fu_261_data_OUT_M_real_V_address0.read();
    } else {
        xout_M_real_V_address0 = "XXXXX";
    }
}

void FFT::thread_xout_M_real_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
         esl_seteq<1,1,1>(regslice_both_data_OUT_U_apdone_blk.read(), ap_const_logic_0))) {
        xout_M_real_V_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        xout_M_real_V_ce0 = grp_FFT0_fu_261_data_OUT_M_real_V_ce0.read();
    } else {
        xout_M_real_V_ce0 = ap_const_logic_0;
    }
}

void FFT::thread_xout_M_real_V_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        xout_M_real_V_we0 = grp_FFT0_fu_261_data_OUT_M_real_V_we0.read();
    } else {
        xout_M_real_V_we0 = ap_const_logic_0;
    }
}

void FFT::thread_zext_ln18_fu_363_p1() {
    zext_ln18_fu_363_p1 = esl_zext<64,6>(i_0_i_reg_239.read());
}

void FFT::thread_zext_ln19_fu_368_p1() {
    zext_ln19_fu_368_p1 = esl_zext<64,5>(rev_32_q0.read());
}

void FFT::thread_zext_ln58_fu_329_p1() {
    zext_ln58_fu_329_p1 = esl_zext<64,6>(i_0_reg_228.read());
}

void FFT::thread_zext_ln68_fu_386_p1() {
    zext_ln68_fu_386_p1 = esl_zext<64,6>(i1_0_reg_250.read());
}

void FFT::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln58_fu_317_p2.read(), ap_const_lv1_1) && !(esl_seteq<1,1,1>(icmp_ln58_fu_317_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, data_IN_TVALID_int.read())))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln58_fu_317_p2.read(), ap_const_lv1_0) && !(esl_seteq<1,1,1>(icmp_ln58_fu_317_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, data_IN_TVALID_int.read())))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln17_fu_351_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(grp_FFT0_fu_261_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(grp_FFT0_fu_261_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            if ((esl_seteq<1,1,1>(grp_FFT0_fu_261_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
                ap_NS_fsm = ap_ST_fsm_state11;
            } else {
                ap_NS_fsm = ap_ST_fsm_state10;
            }
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            if ((esl_seteq<1,1,1>(grp_FFT0_fu_261_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()))) {
                ap_NS_fsm = ap_ST_fsm_state13;
            } else {
                ap_NS_fsm = ap_ST_fsm_state12;
            }
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && esl_seteq<1,1,1>(grp_FFT0_fu_261_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state15;
            } else {
                ap_NS_fsm = ap_ST_fsm_state14;
            }
            break;
        case 16384 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && esl_seteq<1,1,1>(regslice_both_data_OUT_U_apdone_blk.read(), ap_const_logic_0) && esl_seteq<1,1,1>(icmp_ln68_fu_374_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && esl_seteq<1,1,1>(regslice_both_data_OUT_U_apdone_blk.read(), ap_const_logic_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln68_fu_374_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state16;
            } else {
                ap_NS_fsm = ap_ST_fsm_state15;
            }
            break;
        case 32768 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && esl_seteq<1,1,1>(data_OUT_TREADY_int.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state17;
            } else {
                ap_NS_fsm = ap_ST_fsm_state16;
            }
            break;
        case 65536 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && esl_seteq<1,1,1>(data_OUT_TREADY_int.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state15;
            } else {
                ap_NS_fsm = ap_ST_fsm_state17;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<17>) ("XXXXXXXXXXXXXXXXX");
            break;
    }
}

void FFT::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data_IN_TDATA\" :  \"" << data_IN_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data_IN_TVALID\" :  \"" << data_IN_TVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"data_IN_TREADY\" :  \"" << data_IN_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"data_OUT_TDATA\" :  \"" << data_OUT_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"data_OUT_TVALID\" :  \"" << data_OUT_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data_OUT_TREADY\" :  \"" << data_OUT_TREADY.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

